#!/usr/bin/env php
<?php
/**
 * Copyright 2010 The Horde Project (http://www.horde.org/)
 *
 * See the enclosed file COPYING for license information (LGPL). If you
 * did not receive this file, see http://www.fsf.org/copyleft/lgpl.html.
 *
 * @author Chuck Hagenbuch <chuck@horde.org>
 */

require_once dirname(__FILE__) . '/../lib/Application.php';
Horde_Registry::appInit('horde', array('authentication' => 'none', 'cli' => true));
$cli = Horde_Cli::singleton();

// Get a database connection
$db = $GLOBALS['injector']->getInstance('Horde_Db_Adapter_Base');

// Parse command line arguments
array_shift($_SERVER['argv']);
$args = $_SERVER['argv'];
if (empty($args[0])) {
    $cli->fatal("An application argument is required");
}
$app = $args[0];
if (!in_array($app, $GLOBALS['registry']->listApps('inactive', 'hidden', 'notoolbar', 'admin', 'active'))) {
    $cli->fatal("$app is not a configured Horde application");
}
$action = 'up';
if (!empty($args[1])) {
    switch ($args[1]) {
    case 'up':
    case 'down':
        $action = $args[1];
        break;

    default:
        $action = 'migrate';
        $targetVersion = $args[1];
    }
}

// Run
$dir = $GLOBALS['registry']->get('fileroot', $app) . '/migrations/';
$logger = new Horde_Log_Logger(new Horde_Log_Handler_Stream(STDOUT));
$migrator = new Horde_Db_Migration_Migrator($db, $logger, array('migrationsPath' => $dir, 'schemaTableName' => $app . '_schema_info'));
try {
    switch ($action) {
    case 'up':
        $migrator->up();
        break;

    case 'down':
        $migrator->down();
        break;

    case 'migrate':
        $migrator->migrate($targetVersion);
        break;
    }
} catch (Exception $e) {
    echo $e->getMessage();
    exit(1);
}
